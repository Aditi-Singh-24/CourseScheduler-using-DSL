/**
 * generated by Xtext 2.38.0
 */
package org.aditi.course.scheduler.courseScheduler.impl;

import java.util.Collection;

import org.aditi.course.scheduler.courseScheduler.Availability;
import org.aditi.course.scheduler.courseScheduler.CourseSchedulerPackage;
import org.aditi.course.scheduler.courseScheduler.Room;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Room</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.aditi.course.scheduler.courseScheduler.impl.RoomImpl#getCapacity <em>Capacity</em>}</li>
 *   <li>{@link org.aditi.course.scheduler.courseScheduler.impl.RoomImpl#getAvailability <em>Availability</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RoomImpl extends ElementImpl implements Room
{
  /**
   * The default value of the '{@link #getCapacity() <em>Capacity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCapacity()
   * @generated
   * @ordered
   */
  protected static final int CAPACITY_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCapacity() <em>Capacity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCapacity()
   * @generated
   * @ordered
   */
  protected int capacity = CAPACITY_EDEFAULT;

  /**
   * The cached value of the '{@link #getAvailability() <em>Availability</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAvailability()
   * @generated
   * @ordered
   */
  protected EList<Availability> availability;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RoomImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CourseSchedulerPackage.Literals.ROOM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCapacity()
  {
    return capacity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCapacity(int newCapacity)
  {
    int oldCapacity = capacity;
    capacity = newCapacity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CourseSchedulerPackage.ROOM__CAPACITY, oldCapacity, capacity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Availability> getAvailability()
  {
    if (availability == null)
    {
      availability = new EObjectContainmentEList<Availability>(Availability.class, this, CourseSchedulerPackage.ROOM__AVAILABILITY);
    }
    return availability;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CourseSchedulerPackage.ROOM__AVAILABILITY:
        return ((InternalEList<?>)getAvailability()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CourseSchedulerPackage.ROOM__CAPACITY:
        return getCapacity();
      case CourseSchedulerPackage.ROOM__AVAILABILITY:
        return getAvailability();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CourseSchedulerPackage.ROOM__CAPACITY:
        setCapacity((Integer)newValue);
        return;
      case CourseSchedulerPackage.ROOM__AVAILABILITY:
        getAvailability().clear();
        getAvailability().addAll((Collection<? extends Availability>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CourseSchedulerPackage.ROOM__CAPACITY:
        setCapacity(CAPACITY_EDEFAULT);
        return;
      case CourseSchedulerPackage.ROOM__AVAILABILITY:
        getAvailability().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CourseSchedulerPackage.ROOM__CAPACITY:
        return capacity != CAPACITY_EDEFAULT;
      case CourseSchedulerPackage.ROOM__AVAILABILITY:
        return availability != null && !availability.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (capacity: ");
    result.append(capacity);
    result.append(')');
    return result.toString();
  }

} //RoomImpl
