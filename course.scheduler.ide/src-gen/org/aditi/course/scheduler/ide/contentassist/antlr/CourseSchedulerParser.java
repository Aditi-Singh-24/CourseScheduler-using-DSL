/*
 * generated by Xtext 2.38.0
 */
package org.aditi.course.scheduler.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.aditi.course.scheduler.ide.contentassist.antlr.internal.InternalCourseSchedulerParser;
import org.aditi.course.scheduler.services.CourseSchedulerGrammarAccess;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class CourseSchedulerParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(CourseSchedulerGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, CourseSchedulerGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
			builder.put(grammarAccess.getDayAccess().getAlternatives(), "rule__Day__Alternatives");
			builder.put(grammarAccess.getCourseAccess().getGroup(), "rule__Course__Group__0");
			builder.put(grammarAccess.getCourseAccess().getGroup_18(), "rule__Course__Group_18__0");
			builder.put(grammarAccess.getCourseAccess().getGroup_23(), "rule__Course__Group_23__0");
			builder.put(grammarAccess.getCourseAccess().getGroup_28(), "rule__Course__Group_28__0");
			builder.put(grammarAccess.getRoomAccess().getGroup(), "rule__Room__Group__0");
			builder.put(grammarAccess.getRoomAccess().getGroup_7(), "rule__Room__Group_7__0");
			builder.put(grammarAccess.getAvailabilityAccess().getGroup(), "rule__Availability__Group__0");
			builder.put(grammarAccess.getTimeSlotAccess().getGroup(), "rule__TimeSlot__Group__0");
			builder.put(grammarAccess.getScheduleTriggerAccess().getGroup(), "rule__ScheduleTrigger__Group__0");
			builder.put(grammarAccess.getCourseSchedulerAccess().getElementsAssignment(), "rule__CourseScheduler__ElementsAssignment");
			builder.put(grammarAccess.getCourseAccess().getNameAssignment_1(), "rule__Course__NameAssignment_1");
			builder.put(grammarAccess.getCourseAccess().getTeacherNameAssignment_3(), "rule__Course__TeacherNameAssignment_3");
			builder.put(grammarAccess.getCourseAccess().getTeacherIdAssignment_5(), "rule__Course__TeacherIdAssignment_5");
			builder.put(grammarAccess.getCourseAccess().getDurationAssignment_7(), "rule__Course__DurationAssignment_7");
			builder.put(grammarAccess.getCourseAccess().getSessionsAssignment_10(), "rule__Course__SessionsAssignment_10");
			builder.put(grammarAccess.getCourseAccess().getStudentCountAssignment_12(), "rule__Course__StudentCountAssignment_12");
			builder.put(grammarAccess.getCourseAccess().getDayAssignment_14(), "rule__Course__DayAssignment_14");
			builder.put(grammarAccess.getCourseAccess().getBatchesAssignment_17(), "rule__Course__BatchesAssignment_17");
			builder.put(grammarAccess.getCourseAccess().getBatchesAssignment_18_1(), "rule__Course__BatchesAssignment_18_1");
			builder.put(grammarAccess.getCourseAccess().getPrefersAssignment_22(), "rule__Course__PrefersAssignment_22");
			builder.put(grammarAccess.getCourseAccess().getPrefersAssignment_23_1(), "rule__Course__PrefersAssignment_23_1");
			builder.put(grammarAccess.getCourseAccess().getPreferredSessionsAssignment_27(), "rule__Course__PreferredSessionsAssignment_27");
			builder.put(grammarAccess.getCourseAccess().getPreferredSessionsAssignment_28_1(), "rule__Course__PreferredSessionsAssignment_28_1");
			builder.put(grammarAccess.getRoomAccess().getNameAssignment_1(), "rule__Room__NameAssignment_1");
			builder.put(grammarAccess.getRoomAccess().getCapacityAssignment_3(), "rule__Room__CapacityAssignment_3");
			builder.put(grammarAccess.getRoomAccess().getAvailabilityAssignment_6(), "rule__Room__AvailabilityAssignment_6");
			builder.put(grammarAccess.getRoomAccess().getAvailabilityAssignment_7_1(), "rule__Room__AvailabilityAssignment_7_1");
			builder.put(grammarAccess.getAvailabilityAccess().getDayAssignment_0(), "rule__Availability__DayAssignment_0");
			builder.put(grammarAccess.getAvailabilityAccess().getStartAssignment_1(), "rule__Availability__StartAssignment_1");
			builder.put(grammarAccess.getAvailabilityAccess().getEndAssignment_3(), "rule__Availability__EndAssignment_3");
			builder.put(grammarAccess.getTimeSlotAccess().getNameAssignment_1(), "rule__TimeSlot__NameAssignment_1");
			builder.put(grammarAccess.getTimeSlotAccess().getStartAssignment_2(), "rule__TimeSlot__StartAssignment_2");
			builder.put(grammarAccess.getTimeSlotAccess().getEndAssignment_4(), "rule__TimeSlot__EndAssignment_4");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private CourseSchedulerGrammarAccess grammarAccess;

	@Override
	protected InternalCourseSchedulerParser createParser() {
		InternalCourseSchedulerParser result = new InternalCourseSchedulerParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public CourseSchedulerGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(CourseSchedulerGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
